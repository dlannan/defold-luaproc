local tinsert = table.insert
local tremove = table.remove 
local tconcat = table.concat

local function setenabled( self, enable )
	self.enabled = enable
	gui.set_enabled(gui.get_node("box"), enable)
	gui.set_enabled(gui.get_node("box1"), enable)
	gui.set_enabled(gui.get_node("box2"), enable)
	gui.set_enabled(gui.get_node("box3"), enable)
end

local LINE_SIZE = 20
function init(self)

	self.page1 = {}
	self.page2 = {}
	self.page3 = {}
	self.page4 = {}
	
	setenabled(self, false)
end

function final(self)

end

function update(self, dt)

end

function on_message(self, message_id, message, sender)

	if(message_id == hash("enable_gui")) then 
		if(self.enabled == false) then setenabled(self, true) end
	end
	
	if(message_id == hash("gui1text")) then 
		tinsert(self.page1, message.line)
		if(#self.page1 > LINE_SIZE) then tremove(self.page1, 1) end
		gui.set_text(gui.get_node("outtext1"), tconcat(self.page1, "\n"))
	end
	if(message_id == hash("gui2text")) then 
		tinsert(self.page2, message.line)
		if(#self.page2 > LINE_SIZE) then tremove(self.page2, 1) end
		gui.set_text(gui.get_node("outtext2"), tconcat(self.page2, "\n"))
	end
	if(message_id == hash("gui3text")) then 
		tinsert(self.page3, message.line)
		if(#self.page3 > LINE_SIZE) then tremove(self.page3, 1) end
		gui.set_text(gui.get_node("outtext3"), tconcat(self.page3, "\n"))
	end
	if(message_id == hash("gui4text")) then 
		tinsert(self.page4, message.line)
		if(#self.page4 > LINE_SIZE) then tremove(self.page4, 1) end
		gui.set_text(gui.get_node("outtext4"), tconcat(self.page4, "\n"))
	end
end


function on_reload(self)

end

